{"version":3,"sources":["webpack://voicevox-blog/./src/pages/using-typescript.tsx","webpack://voicevox-blog/./src/components/header.js","webpack://voicevox-blog/./src/components/layout.js"],"names":["data","path","title","site","buildTime","href","Link","to","Header","siteTitle","className","style","fontSize","defaultProps","children","useStaticQuery","siteMetadata","margin","maxWidth","padding","marginTop","Date","getFullYear"],"mappings":"sKAyCA,UA5BwD,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,qEAC2C,sCAD3C,+DAE8C,yCAF9C,wEAKA,qEAC2C,wCAD3C,oBAEM,wCAFN,gBAEsC,uCAFtC,UAIA,2DACiCD,EADjC,uBAC2D,IACxDD,EAAKG,KAAKC,UAFb,KAIA,2DACkC,IAChC,qBAAGC,KAAK,6CAAR,kCAFF,KAOA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,8B,0FCjCEC,EAAS,SAAC,GAAD,EAAGC,UAAH,OA2Bb,2BAASC,UAAU,4BACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,+BACb,qBACEA,UAAU,QACVC,MAAO,CACLC,SAAS,WAHb,YAQA,qBAAGF,UAAU,qCAAb,gCAYRF,EAAOK,aAAe,CACpBJ,UAAU,IAGZ,QCJA,EAxCe,SAAC,GAAkB,IAAD,EAAfK,EAAe,EAAfA,SACVd,GAAOe,oBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQN,WAAW,UAAAT,EAAKG,KAAKa,oBAAV,eAAwBd,QAAxB,UACnB,uBACES,MAAO,CACLM,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,4BAAOL,GACP,0BACEH,MAAO,CACLS,UAAU,SAFd,MAKK,IAAIC,MAAOC,cALhB,mBAOE,qBAAGjB,KAAK,4BAAR","file":"component---src-pages-using-typescript-tsx-0297f1b3520b70079976.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  // <header\n  //   style={{\n  //     background: `rebeccapurple`,\n  //     marginBottom: `1.45rem`,\n  //   }}\n  // >\n  //   <div\n  //     style={{\n  //       margin: `0 auto`,\n  //       maxWidth: 960,\n  //       padding: `1.45rem 1.0875rem`,\n  //     }}\n  //   >\n  //     <h1 style={{ margin: 0 }}>\n  //       <Link\n  //         to=\"/\"\n  //         style={{\n  //           color: `white`,\n  //           textDecoration: `none`,\n  //         }}\n  //       >\n  //         {siteTitle}\n  //       </Link>\n  //     </h1>\n  //   </div>\n  // </header>\n  <section className=\"hero is-primary is-small\">\n    <div className=\"hero-body\">\n      <div className=\"container has-text-centered\">\n        <p\n          className=\"title\"\n          style={{\n            fontSize: `5.5rem`,\n          }}\n        >\n          VOICEVOX\n        </p>\n        <p className=\"subtitle has-text-weight-semibold\">\n          無料で使える中品質なテキスト読み上げソフトウェア\n        </p>\n      </div>\n    </div>\n  </section>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}